AWS EC2 Start/Stop Automation using Terraform and Lambda
========================================================

1. Prerequisites
----------------
- Install Terraform and AWS CLI on your machine.
- Configure AWS CLI with `aws configure` using a user with sufficient permissions (AdministratorAccess recommended for setup).

2. Prepare Lambda Function
--------------------------
- Create a file named `lambda_function.py` with the following content:

    import boto3

    INSTANCE_ID = "i-01eede97e50884138"
    REGION = "ap-south-1"

    def lambda_handler(event, context):
        action = event.get("action", "start")
        ec2 = boto3.client("ec2", region_name=REGION)

        if action == "start":
            ec2.start_instances(InstanceIds=[INSTANCE_ID])
            return f"EC2 instance {INSTANCE_ID} started."
        elif action == "stop":
            ec2.stop_instances(InstanceIds=[INSTANCE_ID])
            return f"EC2 instance {INSTANCE_ID} stopped."
        else:
            return f"Unknown action: {action}"

- Save the file in your Terraform project directory.

3. Package Lambda Code
----------------------
- Open PowerShell in your project directory.
- Run:
    Compress-Archive -Path lambda_function.py -DestinationPath lambda.zip -Force

4. Review and Update Terraform Configuration
--------------------------------------------
- Ensure your `main.tf` contains:
    - AWS provider configuration.
    - IAM role and policies for Lambda.
    - Lambda function resource pointing to `lambda.zip`.
    - EventBridge rules and targets for scheduling.
    - Lambda permissions for EventBridge.

5. Initialize Terraform
-----------------------
- Run:
    terraform init

6. Plan Terraform Deployment
----------------------------
- Run:
    terraform plan
- Review the output to confirm resources to be created.

7. Apply Terraform Deployment
-----------------------------
- Run:
    terraform apply
- Type `yes` to confirm and deploy resources.

8. Verify Automation
--------------------
- Check AWS Console:
    - Lambda: Confirm function is created.
    - CloudWatch Logs: Check logs for Lambda execution.
    - EC2: Observe instance state at scheduled times.
- Optionally, test Lambda manually from the AWS Console with a test event:
    { "action": "start" }
    or
    { "action": "stop" }

9. Update Lambda Code (if needed)
---------------------------------
- Edit `lambda_function.py` as required.
- Re-create `lambda.zip`:
    Compress-Archive -Path lambda_function.py -DestinationPath lambda.zip -Force
- Run:
    terraform apply

10. Clean Up (optional)
-----------------------
- To remove all resources:
    terraform destroy

========================================================
Automation will now start and stop your EC2 instance at